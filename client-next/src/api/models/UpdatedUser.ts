/* tslint:disable */
/* eslint-disable */
/**
 * Practice API Documentation
 * Practice API description
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@admin.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdatedUser
 */
export interface UpdatedUser {
    /**
     * ID of the user
     * @type {any}
     * @memberof UpdatedUser
     */
    id?: any | null;
    /**
     * Name of the user
     * @type {any}
     * @memberof UpdatedUser
     */
    name?: any | null;
    /**
     * Email of the user
     * @type {any}
     * @memberof UpdatedUser
     */
    email?: any | null;
    /**
     * Email verification
     * @type {any}
     * @memberof UpdatedUser
     */
    emailVerifiedAt?: any | null;
    /**
     * Password of the user
     * @type {any}
     * @memberof UpdatedUser
     */
    password?: any | null;
    /**
     * Creation date
     * @type {Date}
     * @memberof UpdatedUser
     */
    createdAt?: Date;
    /**
     * Last update date
     * @type {Date}
     * @memberof UpdatedUser
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the UpdatedUser interface.
 */
export function instanceOfUpdatedUser(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdatedUserFromJSON(json: any): UpdatedUser {
    return UpdatedUserFromJSONTyped(json, false);
}

export function UpdatedUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatedUser {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'emailVerifiedAt': !exists(json, 'email_verified_at') ? undefined : json['email_verified_at'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
    };
}

export function UpdatedUserToJSON(value?: UpdatedUser | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'email': value.email,
        'email_verified_at': value.emailVerifiedAt,
        'password': value.password,
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}

